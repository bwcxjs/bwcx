import{_ as e,o as a,c as r,a as o}from"./app-aa72e212.js";const t={},i=o('<h1 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h1><h3 id="provideclass-options-provideapioptions-void" tabindex="-1"><a class="header-anchor" href="#provideclass-options-provideapioptions-void" aria-hidden="true">#</a> provideClass(options: ProvideAPIOptions): void</h3><p>编程式绑定一个类到容器（请求链路中动态绑定的请求作用域依赖将无法解析）。</p><h3 id="providefunction-options-provideapioptions-void" tabindex="-1"><a class="header-anchor" href="#providefunction-options-provideapioptions-void" aria-hidden="true">#</a> provideFunction(options: ProvideAPIOptions): void</h3><p>编程式绑定一个函数到容器。</p><h3 id="provideconst-options-provideapioptions-void" tabindex="-1"><a class="header-anchor" href="#provideconst-options-provideapioptions-void" aria-hidden="true">#</a> provideConst(options: ProvideAPIOptions): void</h3><p>编程式绑定一个常量到容器。</p><h3 id="getdependency-t-id-string-symbol-newable-container-container-t" tabindex="-1"><a class="header-anchor" href="#getdependency-t-id-string-symbol-newable-container-container-t" aria-hidden="true">#</a> getDependency&lt;T&gt;(id: string | symbol | Newable, container?: Container): T</h3><p>从容器获取依赖。</p><h3 id="createreqparamdecorator-handler-ctx-any-parameterdecorator" tabindex="-1"><a class="header-anchor" href="#createreqparamdecorator-handler-ctx-any-parameterdecorator" aria-hidden="true">#</a> createReqParamDecorator(handler: (ctx) =&gt; any): ParameterDecorator</h3><p>创建请求参数装饰器，传入一个自定义的 handler 来决定被装饰参数应如何取值。</p><h3 id="createguardgroup-opt-iguardgroup" tabindex="-1"><a class="header-anchor" href="#createguardgroup-opt-iguardgroup" aria-hidden="true">#</a> createGuardGroup(opt): IGuardGroup</h3><p>创建一个 <code>&lt;key, Decorator&lt;Guard&gt;&gt;</code> 的守卫组。</p><h3 id="getroutemetadata-controller-newable-route-string-iroutemetadata" tabindex="-1"><a class="header-anchor" href="#getroutemetadata-controller-newable-route-string-iroutemetadata" aria-hidden="true">#</a> getRouteMetadata(controller: Newable, route: string): IRouteMetadata</h3><p>获取路由元数据。</p>',15),d=[i];function n(p,c){return a(),r("div",null,d)}const h=e(t,[["render",n],["__file","api.html.vue"]]);export{h as default};
