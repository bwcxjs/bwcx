import{_ as n,o as s,c as a,a as e}from"./app-aa72e212.js";const t={},p=e(`<h1 id="异常处理" tabindex="-1"><a class="header-anchor" href="#异常处理" aria-hidden="true">#</a> 异常处理</h1><p>bwcx 完全不介入任何异常的处理，不提供默认行为，用户需要自己处理异常并定制返回。</p><h2 id="自定义异常" tabindex="-1"><a class="header-anchor" href="#自定义异常" aria-hidden="true">#</a> 自定义异常</h2><p>需要继承 <code>Exception</code> 类。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Exception <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;bwcx-ljsm&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">CustomRequestException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> code<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>code<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Request error with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;CustomRequestException&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 抛出自定义异常</span>
<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CustomRequestException</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>框架也提供了诸如 <code>ValidationException</code> 等内置异常。</p></div><h2 id="定义异常处理器" tabindex="-1"><a class="header-anchor" href="#定义异常处理器" aria-hidden="true">#</a> 定义异常处理器</h2><p>对于每种框架内置异常和自定义异常，都需要自行定义异常处理器，决定如何记录错误信息和返回。</p><p>需要使用 <code>@ExceptionHandler()</code> 装饰器标注并指定需要处理的异常类，同时实现 <code>IBwcxExceptionHandler</code> 接口。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ExceptionHandler<span class="token punctuation">,</span> IBwcxExceptionHandler<span class="token punctuation">,</span> RequestContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;bwcx-ljsm&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> CustomRequestException <span class="token keyword">from</span> <span class="token string">&#39;../exceptions/custom-request.exception&#39;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">ExceptionHandler</span></span><span class="token punctuation">(</span>CustomRequestException<span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">CustomRequestExceptionHandler</span> <span class="token keyword">implements</span> <span class="token class-name">IBwcxExceptionHandler</span> <span class="token punctuation">{</span>
  <span class="token function">catch</span><span class="token punctuation">(</span>error<span class="token operator">:</span> CustomRequestException<span class="token punctuation">,</span> ctx<span class="token operator">:</span> RequestContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      msg<span class="token operator">:</span> <span class="token string">&#39;Internal Server Error&#39;</span><span class="token punctuation">,</span>
      code<span class="token operator">:</span> error<span class="token punctuation">.</span>code<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>@ExceptionHandler()</code> 默认作用域是 <code>Singleton</code>。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>对于未设置异常处理器的异常，框架会向上查找其父类，直到有一种异常可以被处理为止。如果没有任何异常处理器可以处理此异常，则最终会由 web 框架处理。</p><p>因此，我们建议总是设置一个用来处理最顶层异常（<code>Error</code>）的异常处理器，以保证非预期的异常可以被处理。</p></div>`,13),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","exception.html.vue"]]);export{r as default};
